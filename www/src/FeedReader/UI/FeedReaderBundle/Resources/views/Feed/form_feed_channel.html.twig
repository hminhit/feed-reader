{% extends 'FeedReaderBundle:Layout:feed_layout.html.twig' %}
{% set heading = '' %}
{% if feedChannelId is defined %}
    {% set heading = 'Edit a feed channel - ' ~ feedChannelForm['channelTitle'].vars.value %}
{% else %}
    {% set heading = 'Add a new feed channel' %}
{% endif %}
{% block sub_head_title %}{{ heading }}{% endblock %}
{% block feed_body %}
    <div class="main">
        <h1 class="page-header"><a href="{{ path('feed_reader_feed_list_feed_channel') }}">Back to List of
                Channels</a></h1>
        <form class="form-horizontal mt-20" action="{{ app.request.uri }}" method="post" novalidate="novalidate"
              data-form-channel>
            <div class="panel panel-default">
                <div class="panel-heading">{{ heading }}</div>
                <div class="panel-body">
                    {% include('FeedReaderBundle:Feed:elements/_channel.html.twig') %}
                </div>
                <div class="panel-footer text-right">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-default"
                            onclick="window.location.href='{{ app.request.uri }}';">Reset
                    </button>
                </div>
            </div>
            {{ form_widget(feedChannelForm['_token']) }}
        </form>
    </div>
{% endblock %}
{% block javascript_inline %}
    <script src="{{ asset('bundles/feedreader/plugins/select2/select2.min.js') }}"></script>
    <script src="{{ asset('bundles/feedreader/plugins/jquery-validation/jquery.validate.min.js') }}"></script>
    <script type="text/javascript">
        var FeedChannelForm = {
            init: function () {
                this.validateForm();
                this.addRulesChannel();
            },
            validateForm: function () {
                $('[data-form-channel]').validate();
            }
            , addRulesChannel: function () {
                $('input[name="feed_channel[channelTitle]"]').rules('add', 'required');
                $('input[name="feed_channel[channelLink]"]').rules('add', {'required': true, 'url': true});
                $('textarea[name="feed_channel[channelDescription]"]').rules('add', 'required');
                console.log('debug', 'addRulesChannel');
            }

        };
        var FeedChannelCategoryForm = {
            init: function () {
                // channel
                this.initAddMethodValidation();
                this.fireEventClickRemoveChannelCategory();
                this.fireEventClickAddChannelCategory();
                this.initAddRulesChannelCategory();
            }
            , initAddMethodValidation: function () {
                $.validator.addMethod("domain", function(value, element) {
                    return this.optional(element) || /^(([a-zA-Z]{1})|([a-zA-Z]{1}[a-zA-Z]{1})|([a-zA-Z]{1}[0-9]{1})|([0-9]{1}[a-zA-Z]{1})|([a-zA-Z0-9][a-zA-Z0-9-_]{1,61}[a-zA-Z0-9]))\.([a-zA-Z]{2,6}|[a-zA-Z0-9-]{2,30}\.[a-zA-Z]{2,3})$/.test(value);
                }, "Please enter a valid Domain.");
            }
            , initAddRulesChannelCategory: function () {
                var self = this;
                $('[data-coordinate-group="channel-category-item"]').each(function (idx) {
                    self.addRulesChannelCategory($(this));
                });
            }
            , addRulesChannelCategory: function (collectionHolder) {
                collectionHolder.find('input[name*=categoryName]').rules('add', 'required');
                collectionHolder.find('input[name*=categoryDomain]').rules('add', 'domain');
                console.log('debug', 'addRulesChannelCategory');
            }
            , fireEventClickRemoveChannelCategory: function () {
                $(document).on('click', '[data-btn-remove-channel-category]', function (e) {
                    e.preventDefault();
                    $(this).closest('[data-coordinate-group="channel-category-item"]').remove();
                    console.log('debug', 'fireEventClickRemoveChannelCategory');
                });

            }
            , fireEventClickAddChannelCategory: function () {
                var self = this;
                $(document).on('click', '[data-btn-add-channel-category]', function (e) {
                    e.preventDefault();
                    self.addNewChannelCategory();
                    console.log('debug', 'fireEventClickRemoveChannelCategory');
                });
            }
            , addNewChannelCategory: function () {
                var self = this;
                var collectionHolder = $('[data-coordinate-group="channel-category"]');
                var childCollectionHolder = collectionHolder.find('[data-coordinate-group="channel-category-item"]');
                collectionHolder.data('index', childCollectionHolder.length);
                var prototype = collectionHolder.data('prototype');
                var index = collectionHolder.data('index');
                var newForm = prototype.replace(/__name__/g, index);
                collectionHolder.data('index', index + 1);
                collectionHolder.append(newForm);
                this.addRulesChannelCategory(collectionHolder.find('[data-coordinate-group="channel-category-item"]').eq(index));
            }
        };

        var FeedChannelItemForm = {
            init: function () {
                this.fireEventClickRemoveChannelItem();
                this.fireEventClickAddChannelItem();
                this.initAddRulesChannelItem();
            }
            , initAddRulesChannelItem: function () {
                console.log('debug', 'initAddRulesChannelItem');
                var self = this;
                $('[data-coordinate-group="channel-item-item"]').each(function (idx) {
                    console.log('debug', 'addRulesChannelItem');
                    self.addRulesChannelItem($(this));
                });
            }
            , addRulesChannelItem: function (collectionHolder) {
                console.log('itemDescription',collectionHolder.find('textarea[name*=itemDescription]').val());
                console.log('itemTitle',collectionHolder.find('input[name*=itemTitle]').val());
                collectionHolder.find('input[name*=itemTitle]').rules('add', {
                    required: {
                        depends: function (element) {
                            return collectionHolder.find('textarea[name*=itemDescription]').val() == '';
                        }
                    }
                });
                console.log('debug', 'addRulesChannelItem');
            }
            , fireEventClickRemoveChannelItem: function () {
                $(document).on('click', '[data-btn-remove-channel-item]', function (e) {
                    e.preventDefault();
                    $(this).closest('[data-coordinate-group="channel-item-item"]').remove();
                    console.log('debug', 'fireEventClickRemoveChannelItem');
                });

            }
            , fireEventClickAddChannelItem: function () {
                var self = this;
                $(document).on('click', '[data-btn-add-channel-item]', function (e) {
                    e.preventDefault();
                    self.addNewChannelItem();
                    console.log('debug', 'fireEventClickAddChannelItem');
                });
            }
            , addNewChannelItem: function () {
                var collectionHolder = $('[data-coordinate-group="channel-item"]');
                var childCollectionHolder = collectionHolder.find('[data-coordinate-group="channel-item-item"]');
                collectionHolder.data('index', childCollectionHolder.length);
                var prototype = collectionHolder.data('prototype');
                var index = collectionHolder.data('index');
                var newForm = prototype.replace(/__name__/g, index);
                collectionHolder.data('index', index + 1);
                collectionHolder.append(newForm);
                this.addRulesChannelItem(collectionHolder.find('[data-coordinate-group="channel-item-item"]').eq(index));
            }
        };
        $(document).ready(function () {
            FeedChannelForm.init();
            FeedChannelCategoryForm.init();
            FeedChannelItemForm.init();
        });
    </script>
{% endblock %}
